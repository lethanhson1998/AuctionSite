// <auto-generated />
using System;
using AuctionPage.WebData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuctionPage.WebData.Migrations
{
    [DbContext(typeof(AuctionPageDbContext))]
    [Migration("20200922021432_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseProvider.Models.ChiTietHoaDonNhap", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaHoaDonNhap")
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<DateTime>("NgaySanXuat")
                        .HasColumnType("Date");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("ThanhTien")
                        .HasColumnType("float");

                    b.HasKey("MaSanPham", "MaHoaDonNhap");

                    b.HasIndex("MaHoaDonNhap");

                    b.ToTable("ChiTietHoaDonNhap");
                });

            modelBuilder.Entity("DatabaseProvider.Models.DanhGia", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDangNhap")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BinhLuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.HasKey("MaSanPham", "TenDangNhap");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("DatabaseProvider.Models.DauGiaSanPham", b =>
                {
                    b.Property<string>("MaDauGiaSP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("GiaBanNgay")
                        .HasColumnType("float");

                    b.Property<double>("GiaHienTai")
                        .HasColumnType("float");

                    b.Property<double>("GiaKhoiDiem")
                        .HasColumnType("float");

                    b.Property<string>("MaPhienDau")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(true);

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaDauGiaSP");

                    b.HasIndex("MaPhienDau");

                    b.HasIndex("MaSanPham");

                    b.ToTable("DauGiaSanPham");
                });

            modelBuilder.Entity("DatabaseProvider.Models.GiaoDich", b =>
                {
                    b.Property<string>("MaGiaoDich")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("KieuGiaoDich")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<double>("SoTien")
                        .HasColumnType("float");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ThoiGianGD")
                        .HasColumnType("datetime2");

                    b.HasKey("MaGiaoDich");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("GiaoDich");
                });

            modelBuilder.Entity("DatabaseProvider.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("GiaMua")
                        .HasColumnType("float");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("Date");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("DatabaseProvider.Models.HoaDonNhap", b =>
                {
                    b.Property<string>("MaHoaDonNhap")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MaNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("Date");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("MaHoaDonNhap");

                    b.HasIndex("MaNhaCungCap");

                    b.ToTable("HoaDonNhap");
                });

            modelBuilder.Entity("DatabaseProvider.Models.LichSuDau", b =>
                {
                    b.Property<string>("MaLichSuDau")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("GiaThoaThuan")
                        .HasColumnType("float");

                    b.Property<string>("MaDauGiaSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ThoiGanDau")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLichSuDau");

                    b.HasIndex("MaDauGiaSP");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("LichSuDau");
                });

            modelBuilder.Entity("DatabaseProvider.Models.LoaiSanPham", b =>
                {
                    b.Property<string>("MaLoaiSP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("TenLoaiSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(true);

                    b.Property<string>("TenVietTat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiSP");

                    b.ToTable("LoaiSanPham");
                });

            modelBuilder.Entity("DatabaseProvider.Models.LoaiThanhVien", b =>
                {
                    b.Property<string>("MaLoaiThanhVien")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenLoaiThanhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("MaLoaiThanhVien");

                    b.ToTable("LoaiThanhVien");
                });

            modelBuilder.Entity("DatabaseProvider.Models.LoaiThanhVien_Quyen", b =>
                {
                    b.Property<string>("MaLoaiThanhVien")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaQuyen")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaLoaiThanhVien", "MaQuyen");

                    b.HasIndex("MaQuyen");

                    b.ToTable("LoaiThanhVien_Quyen");
                });

            modelBuilder.Entity("DatabaseProvider.Models.NhaCungCap", b =>
                {
                    b.Property<string>("MaNhaCungCap")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350)
                        .IsUnicode(true);

                    b.HasKey("MaNhaCungCap");

                    b.ToTable("NhaCungCap");
                });

            modelBuilder.Entity("DatabaseProvider.Models.PhienDau", b =>
                {
                    b.Property<string>("MaPhienDau")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("Date");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("Date");

                    b.HasKey("MaPhienDau");

                    b.ToTable("PhienDau");
                });

            modelBuilder.Entity("DatabaseProvider.Models.Quyen", b =>
                {
                    b.Property<string>("MaQuyen")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("MaQuyen");

                    b.ToTable("Quyen");
                });

            modelBuilder.Entity("DatabaseProvider.Models.SanPham", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AnhChiTiet1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhChiTiet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhChiTiet3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLoaiSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(true);

                    b.Property<string>("TenVietTat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TonKho")
                        .HasColumnType("int");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaLoaiSanPham");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("DatabaseProvider.Models.ThanhVien", b =>
                {
                    b.Property<string>("TenDangNhap")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ActivateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(true);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("MaLoaiThanhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("Date");

                    b.Property<string>("ResetPassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoCMT")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<double>("SoDuTaiKhoan")
                        .HasColumnType("float");

                    b.Property<string>("TenDayDu")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasMaxLength(30);

                    b.HasKey("TenDangNhap");

                    b.HasIndex("MaLoaiThanhVien");

                    b.ToTable("ThanhVien");
                });

            modelBuilder.Entity("DatabaseProvider.Models.ChiTietHoaDonNhap", b =>
                {
                    b.HasOne("DatabaseProvider.Models.HoaDonNhap", "HoaDonNhap")
                        .WithMany("ChiTietHoaDonNhaps")
                        .HasForeignKey("MaHoaDonNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseProvider.Models.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDonNhaps")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.DanhGia", b =>
                {
                    b.HasOne("DatabaseProvider.Models.SanPham", "SanPham")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseProvider.Models.ThanhVien", "ThanhVien")
                        .WithMany("DanhGias")
                        .HasForeignKey("TenDangNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.DauGiaSanPham", b =>
                {
                    b.HasOne("DatabaseProvider.Models.HoaDon", "HoaDon")
                        .WithOne("DauGiaSanPham")
                        .HasForeignKey("DatabaseProvider.Models.DauGiaSanPham", "MaDauGiaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseProvider.Models.PhienDau", "PhienDau")
                        .WithMany("DauGiaSanPhams")
                        .HasForeignKey("MaPhienDau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseProvider.Models.SanPham", "SanPham")
                        .WithMany("DauGiaSanPhams")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.GiaoDich", b =>
                {
                    b.HasOne("DatabaseProvider.Models.ThanhVien", "ThanhVien")
                        .WithMany("GiaoDiches")
                        .HasForeignKey("TenDangNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.HoaDon", b =>
                {
                    b.HasOne("DatabaseProvider.Models.ThanhVien", "ThanhVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("TenDangNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.HoaDonNhap", b =>
                {
                    b.HasOne("DatabaseProvider.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("HoaDonNhaps")
                        .HasForeignKey("MaNhaCungCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.LichSuDau", b =>
                {
                    b.HasOne("DatabaseProvider.Models.DauGiaSanPham", "DauGiaSanPham")
                        .WithMany("LichSuDaus")
                        .HasForeignKey("MaDauGiaSP")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DatabaseProvider.Models.ThanhVien", "ThanhVien")
                        .WithMany("LichSuDaus")
                        .HasForeignKey("TenDangNhap")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.LoaiThanhVien_Quyen", b =>
                {
                    b.HasOne("DatabaseProvider.Models.LoaiThanhVien", "LoaiThanhVien")
                        .WithMany("LoaiThanhVien_Quyens")
                        .HasForeignKey("MaLoaiThanhVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseProvider.Models.Quyen", "Quyen")
                        .WithMany("LoaiThanhVien_Quyens")
                        .HasForeignKey("MaQuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.SanPham", b =>
                {
                    b.HasOne("DatabaseProvider.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaLoaiSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseProvider.Models.ThanhVien", b =>
                {
                    b.HasOne("DatabaseProvider.Models.LoaiThanhVien", "LoaiThanhVien")
                        .WithMany("ThanhViens")
                        .HasForeignKey("MaLoaiThanhVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
